
services:
  # MongoDB for storing crawled data
  mongodb:
    image: mongo:latest
    container_name: mongodb
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
      - ./docker/mongodb/init-mongo.js:/docker-entrypoint-initdb.d/init-mongo.js:ro
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    networks:
      - search-network

  mongo-express:
    image: mongo-express:latest
    container_name: mongo-express
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_ADMINUSERNAME: root
      ME_CONFIG_MONGODB_ADMINPASSWORD: example
      ME_CONFIG_MONGODB_URL: mongodb://root:example@mongodb:27017/
    depends_on:
      - mongodb
    networks:
      - search-network

  # Elasticsearch for indexing and searching
  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.12.1
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200" ]
      interval: 30s
      timeout: 10s
      retries: 5
    networks:
      - search-network

  crawler:
    image: search-engine-crawler:latest
    container_name: crawler
    depends_on:
      - mongodb
    tty: true
    stdin_open: true
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb:27017/
    ports:
      - "5000:5000"
    networks:
      - search-network
  
  indexer:
    image: search-engine-indexer:latest
    container_name: indexer
    tty: true
    stdin_open: true
    depends_on:
      - mongodb
      - elasticsearch
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb:27017/
      - ELASTICSEARCH_URI=http://elasticsearch:9200
    networks:
      - search-network

  webserver:
    image: search-engine-webserver:latest
    container_name: webserver
    depends_on:
      - mongodb
      - elasticsearch
    ports:
      - "8000:8000"
    volumes:
      - ./webserver/search:/app/webserver/search
      - static_volume:/app/webserver/search/collected_static/
    networks:
      - search-network

  nginx:
    image: nginx:1.25-alpine
    volumes:
      - static_volume:/app/webserver/search/collected_static/
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
    ports:
      - "80:80"
    depends_on:
      - webserver
    networks:
      - search-network

  crawler_worker:
    image: search-engine-crawler:latest
    container_name: crawler_worker
    depends_on:
      - redis
      - mongodb
    environment:
      - MONGODB_URI=mongodb://root:example@mongodb:27017/
      - CELERY_APP=crawler.tasks  # Specify the application path
    command: celery -A crawler.tasks worker --loglevel=info --queues=crawler_queue
    networks:
      - search-network


  flower:
    image: mher/flower
    container_name: flower
    depends_on:
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
    ports:
      - "5555:5555"
    networks:
      - search-network

  redis:
    image: redis:7.2
    container_name: redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - search-network

networks:
  search-network:
    driver: bridge

volumes:
  mongo-data:
  elasticsearch_data:
  static_volume: